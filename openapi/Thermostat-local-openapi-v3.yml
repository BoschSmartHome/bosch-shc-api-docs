### Generated by Eclipse Vorto OpenAPI Generator from Model 'vorto.private.local.com.bosch.sh:Thermostat:1.0.0'
openapi: 3.0.0
info:
  title: Bosch Smart Home Local API for Thermostat
  description: |-
    This description focuses on the JSON-based, REST-like API for a Thermostat.
    
    By using this documentation, the developer accepts and agrees to be bound by our [Terms and Conditions](https://github.com/BoschSmartHome/bosch-shc-api-docs#terms-and-conditions).
    
    This documentation is subject to the [Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License](https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode).
    
    Please report any issues you encounter with this documentation in our [GitHub tracker](https://github.com/BoschSmartHome/bosch-shc-api-docs/issues).
  version: "1.0"
servers:
  - url: https://{shcIp}:8444/smarthome
    description: "Bosch Smart Home Controller URL"
    variables:
      shcIp:
        default: 192.168.0.10
tags:
  - name: Services
    description: Services of your Thermostat
  - name: States
    description: States of your Thermostat
paths:
  '/devices/{deviceId}/services/ValveTappet':
    get:
      summary: Retrieve the ValveTappet service of the Thermostat.
      description: |-
        Get the valve position of a specific thermostat.
      tags:
        - Services
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The ValveTappet was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValveTappetService'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/ValveTappet/state':
    get:
      summary: Retrieve the state of the ValveTappet service.
      description: |-
        Retrieve the state of the ValveTappet service identified by the
        `deviceId` path parameter.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of ValveTappet was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValveTappetServiceStates'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'

  '/devices/{deviceId}/services/TemperatureLevel':
    get:
      summary: Retrieve the TemperatureLevel service of the Thermostat.
      description: |-
        Measures the temperature at a central point in the room.
      tags:
        - Services
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The TemperatureLevel was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemperatureLevelService'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/TemperatureLevel/state':
    get:
      summary: Retrieve the state of the TemperatureLevel service.
      description: |-
        Retrieve the state of the TemperatureLevel service identified by the
        `deviceId` path parameter.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of TemperatureLevel was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemperatureLevelServiceStates'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/SilentMode/state': # Updated from trvId to deviceId in path and description
    get:
      summary: Get Silent Mode state
      description: Retrieves the current state of the Silent Mode for the TRV device with the specified ID.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of Silent Mode was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SilentModeState'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
    put:
      summary: Update Silent Mode state
      description: Updates the state of the Silent Mode for the TRV device with the specified ID.
        When Silent Mode is enabled the TRV's motor is more silent but it also consumes more power.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SilentModeState'
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found. One of the defined path parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'

components:
  schemas:
    AdvancedError:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the Object.
          example: JsonRestExceptionResponseEntity
        errorCode:
          type: string
          description: The error code of the occurred Exception.
        statusCode:
          type: integer
          description: The HTTP status of the error.
    ServiceDefinition:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        type: string
        description: "A single fully qualified identifier of the Service of a Device."
      example:
        - ValveTappet
        - TemperatureLevel
    ValveTappetServiceStates:
      type: object
      description: ValveTappetService states of Thermostat
      properties:
        position:
          type: integer
    ValveTappetService:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          enum: [deviceServiceId]
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          $ref: '#/components/schemas/ValveTappetServiceStates'
        path:
          type: string
          description: The path to the Property.
    TemperatureLevelServiceStates:
      type: object
      description: TemperatureLevelService states of Thermostat
      properties:
        temperature:
          type: number
    TemperatureLevelService:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          enum: [deviceServiceId]
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          $ref: '#/components/schemas/TemperatureLevelServiceStates'
        path:
          type: string
          description: The path to the Property.
    SilentModeState:
      type: object
      properties:
        "@type":
          type: string
          enum: [ silentModeState ]
          description: The type of the state object
        mode:
          type: string
          enum:
            - MODE_NORMAL
            - MODE_SILENT
          description: The mode of the silent mode
      required:
        - "@type"
        - mode

  parameters:
    apiVersionHeaderParam:
      in: header
      name: api-version
      description: The version of the API.
      schema:
        type: string
        example: "1.0"
    deviceIdPathParam:
      name: deviceId
      in: path
      description: "A single fully qualified identifier of the Device."
      required: true
      schema:
        type: string
    propertyPathPathParam:
      name: propertyPath
      in: path
      description: The path to the Property.
      required: true
      schema:
        type: string