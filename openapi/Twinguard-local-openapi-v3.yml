### Generated by Eclipse Vorto OpenAPI Generator from Model 'vorto.private.local.com.bosch.sh:Twinguard:1.0.0'
openapi: 3.0.0
info:
  title: Bosch Smart Home Local API for Twinguard
  description: |-
    This description focuses on the JSON-based, REST-like API for a Twinguard.
    
    By using this documentation, the developer accepts and agrees to be bound by our [Terms and Conditions](https://github.com/BoschSmartHome/bosch-shc-api-docs#terms-and-conditions).
    
    This documentation is subject to the [Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License](https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode).
    
    Please report any issues you encounter with this documentation in our [GitHub tracker](https://github.com/BoschSmartHome/bosch-shc-api-docs/issues).
  version: "1.0"
servers:
  - url: https://{shcIp}:8444/smarthome
    description: "Bosch Smart Home Controller URL"
    variables:
      shcIp:
        default: 192.168.0.10
tags:
  - name: Services
    description: Services of your Twinguard
  - name: States
    description: States of your Twinguard
paths:
  '/devices/{deviceId}/services/AirQualityLevel':
    get:
      summary: Retrieve the AirQualityLevel service of the Twinguard.
      description: |-
        This service constantly measures key air quality values to help you create a healthy room climate.
      tags:
        - Services
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The AirQualityLevel was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirQualityLevelService'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/AirQualityLevel/state':
    get:
      summary: Retrieve the state of the AirQualityLevel service.
      description: |-
        Retrieve the state of the AirQualityLevel service identified by the
        `deviceId` path parameter.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of AirQualityLevel was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirQualityLevelServiceStates'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'

  '/devices/{deviceId}/services/SmokeDetectorCheck':
    get:
      summary: Retrieve the SmokeDetectorCheck service of the Twinguard.
      description: |-
        This service checks the smoke detector functionality.
      tags:
        - Services
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The SmokeDetectorCheck was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmokeDetectorCheckService'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/SmokeDetectorCheck/state':
    get:
      summary: Retrieve the state of the SmokeDetectorCheck service.
      description: |-
        Retrieve the state of the SmokeDetectorCheck service identified by the
        `deviceId` path parameter.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of SmokeDetectorCheck was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmokeDetectorCheckServiceStates'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'

    put:
      summary: Executes the smokeDetectorCheckState on the device.
      description: |-
        Executes the smokeDetectorCheckState on the device identified by the `deviceId` path parameter.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found. One of the defined path parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
      requestBody:
        $ref: '#/components/requestBodies/SmokeDetectorCheckServiceSmokeDetectorCheckStatePayload'
components:
  schemas:
    AdvancedError:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the Object.
          example: JsonRestExceptionResponseEntity
        errorCode:
          type: string
          description: The error code of the occurred Exception.
        statusCode:
          type: integer
          description: The HTTP status of the error.
    ServiceDefinition:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        type: string
        description: "A single fully qualified identifier of the Service of a Device."
      example:
        - AirQualityLevel
        - SmokeDetectorCheck
    ComfortZone:
      type: object
      description: ComfortZone of Twinguard
      properties:
        name:
          type: string
        custom:
          type: boolean
        minTemperature:
          type: number
        maxTemperature:
          type: number
        minHumidity:
          type: number
        maxHumidity:
          type: number
        maxPurity:
          type: number
    AirQualityLevelServiceStates:
      type: object
      description: AirQualityLevelService states of Twinguard
      properties:
        combinedRating:
          $ref: '#/components/schemas/RatingState'
        description:
          type: string
        temperature:
          type: number
        temperatureRating:
          $ref: '#/components/schemas/RatingState'
        humidity:
          type: number
        humidityRating:
          $ref: '#/components/schemas/RatingState'
        purity:
          type: number
        purityRating:
          $ref: '#/components/schemas/RatingState'
        comfortZone:
          $ref: '#/components/schemas/ComfortZone'
    AirQualityLevelService:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          enum: [AirQualityLevel]
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          $ref: '#/components/schemas/AirQualityLevelServiceStates'
        path:
          type: string
          description: The path to the Property.
    SmokeDetectorCheckServiceStates:
      type: object
      description: SmokeDetectorCheckService states of Twinguard
      properties:
        '@type':
          type: string
          enum: [smokeDetectorCheckState]
          description: The type of the Object.
        value:
          $ref: '#/components/schemas/SmokeDetectorCheckState'
    SmokeDetectorCheckService:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          enum: [SmokeDetectorCheck]
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          $ref: '#/components/schemas/SmokeDetectorCheckServiceStates'
        path:
          type: string
          description: The path to the Property.
    RatingState:
      type: string
      enum: [GOOD,MEDIUM,BAD]
    SmokeDetectorCheckState:
      type: string
      enum: [SMOKE_TEST_REQUESTED,NONE]

  requestBodies:
    SmokeDetectorCheckServiceSmokeDetectorCheckStatePayload:
      content:
        application/json:
          schema:
            type: object
            properties:
              '@type':
                type: string
                enum: [smokeDetectorCheckState]
                description: The type of the Object.
              value:
                $ref: '#/components/schemas/SmokeDetectorCheckState'
  parameters:
    apiVersionHeaderParam:
      in: header
      name: api-version
      description: The version of the API.
      schema:
        type: string
        example: "1.0"
    deviceIdPathParam:
      name: deviceId
      in: path
      description: "A single fully qualified identifier of the Device."
      required: true
      schema:
        type: string
    propertyPathPathParam:
      name: propertyPath
      in: path
      description: The path to the Property.
      required: true
      schema:
        type: string