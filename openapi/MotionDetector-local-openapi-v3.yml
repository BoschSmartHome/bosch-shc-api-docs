### Generated by Eclipse Vorto OpenAPI Generator from Model 'vorto.private.local.com.bosch.sh:MotionDetector:1.0.0'
openapi: 3.0.0
info:
  title: Bosch Smart Home Local API for Motion Detector
  description: |-
    This description focuses on the JSON-based, REST-like API for a Motion Detector.
    
    By using this documentation, the developer accepts and agrees to be bound by our [Terms and Conditions](https://github.com/BoschSmartHome/bosch-shc-api-docs#terms-and-conditions).
    
    This documentation is subject to the [Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License](https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode).
    
    Please report any issues you encounter with this documentation in our [GitHub tracker](https://github.com/BoschSmartHome/bosch-shc-api-docs/issues).
  version: "1.0"
servers:
  - url: https://{shcIp}:8444/smarthome
    description: "Bosch Smart Home Controller URL"
    variables:
      shcIp:
        default: 192.168.0.10
tags:
  - name: Services
    description: Services of your MotionDetector
  - name: States
    description: States of your MotionDetector
  - name: Actions
    description: Actions of your MotionDetector
paths:
  '/devices/{deviceId}/services/LatestMotion':
    get:
      summary: Retrieve the LatestMotion service of the MotionDetector.
      description: |-
        Detects every movement through an intelligent combination of passive infra-red technology and an additional temperature sensor.
      tags:
        - Services
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The LatestMotion was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LatestMotionService'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/LatestMotion/state':
    get:
      summary: Retrieve the state of the LatestMotion service.
      description: |-
        Retrieve the state of the LatestMotion service identified by the
        `deviceId` path parameter.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of LatestMotion was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LatestMotionServiceStates'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/MultiLevelSensor/state':
    get:
      summary: The MultiLevelSensor reports the illuminance only if either the corresponding MotionLight is enabled or
        an Automation trigger or condition for the MotionDetector's illuminance exists.
      description: |-
        Retrieve the state of the MultiLevelSensor service identified by the `deviceId` path parameter.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of MultiLevelSensor was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IlluminanceLevelState'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/OccupancyDetection/state':
    get:
      summary: Retrieve the state of the OccupancyDetection service.
      description: |-
        Retrieves the last occupancy state change information for the Motion Detector.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of OccupancyDetection was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OccupancyDetectionState'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/DetectionTest/state':
    get:
      summary: Retrieve the state of the DetectionTest service (Walktest).
      description: |-
        Retrieves the current walk test state for the Motion Detector.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of DetectionTest was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionTestState'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
    put:
      summary: Start or stop a walk test (DetectionTest service).
      description: |-
        Starts or stops a walk test for the Motion Detector to verify mounting location.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '@type':
                  type: string
                  enum: [detectionTestState]
                detectionState:
                  type: string
                  enum: [DETECTION_STATE_START, DETECTION_STATE_STOP]
              required:
                - '@type'
                - detectionState
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found.
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/LatestTamper/state':
    get:
      summary: Retrieve the state of the LatestTamper service.
      description: |-
        Retrieves information about tamper protection and the last sabotage attempt.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of LatestTamper was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TamperState'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
    put:
      summary: Enable or disable tamper protection (LatestTamper service).
      description: |-
        Enables or disables tamper protection on the Motion Detector.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '@type':
                  type: string
                  enum: [tamperState]
                tamperProtectionEnabled:
                  type: boolean
              required:
                - '@type'
                - tamperProtectionEnabled
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found.
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/LatestTamper/operation/resetTamperedState':
    post:
      summary: Reset the tampered state (LatestTamper service).
      description: |-
        Resets the tampered state, confirming the physical proper presence of the device.
      tags:
        - Actions
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The tampered state was successfully reset.
          content:
            application/json:
              schema:
                type: object
                properties:
                  '@type':
                    type: string
                    enum: [tamperState]
                  wasTampered:
                    type: boolean
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found.
        '405':
          description: The method was not allowed.
  '/devices/{deviceId}/services/PollControl/state':
    get:
      summary: Retrieve the state of the PollControl service.
      description: |-
        Retrieves the current polling interval for the Motion Detector.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of PollControl was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollControlState'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
    put:
      summary: Set the polling interval (PollControl service).
      description: |-
        Sets the polling interval for the Motion Detector to make it more responsive.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '@type':
                  type: string
                  enum: [pollControlState]
                longPollInterval:
                  type: string
                  enum: [SHORT, LONG]
              required:
                - '@type'
                - longPollInterval
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found.
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/PirSensorConfiguration/state':
    get:
      summary: Retrieve the state of the PirSensorConfiguration service.
      description: |-
        Retrieves the current sensitivity setting for the PIR sensor.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of PirSensorConfiguration was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PirSensorConfigurationState'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
    put:
      summary: Adjust the PIR sensor sensitivity (PirSensorConfiguration service).
      description: |-
        Adjusts the sensitivity of the PIR sensor.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                '@type':
                  type: string
                  enum: [pirSensorConfigurationState]
                motionSensitivity:
                  type: string
                  enum: [LOW, MIDDLE, HIGH]
              required:
                - '@type'
                - motionSensitivity
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found.
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
components:
  schemas:
    AdvancedError:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the Object.
          example: JsonRestExceptionResponseEntity
        errorCode:
          type: string
          description: The error code of the occurred Exception.
        statusCode:
          type: integer
          description: The HTTP status of the error.
    ServiceDefinition:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        type: string
        description: "A single fully qualified identifier of the Service of a Device."
      example:
        - LatestMotion
    LatestMotionServiceStates:
      type: object
      description: LatestMotionService states of MotionDetector
      properties:
        latestMotionDetected:
          type: string
    LatestMotionService:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          enum: [deviceServiceId]
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          $ref: '#/components/schemas/LatestMotionServiceStates'
        path:
          type: string
          description: The path to the Property.
    IlluminanceLevelState:
      type: object
      properties:
        "@type":
          type: string
          example: "illuminanceLevelState"
        illuminance:
          type: integer
          example: 100
    OccupancyDetectionState:
      type: object
      properties:
        '@type':
          type: string
          enum: [occupancyDetectionState]
          description: The type of the Object.
        isOccupied:
          type: boolean
          description: Indicates if the area is currently occupied.
        lastOccupancyChangeTime:
          type: string
          format: date-time
          description: Timestamp of the last occupancy state change (ISO 8601).
      required:
        - '@type'
        - isOccupied
    DetectionTestState:
      type: object
      properties:
        '@type':
          type: string
          enum: [detectionTestState]
          description: The type of the Object.
        detectionState:
          type: string
          enum: [DETECTION_TEST_STOPPED, DETECTION_TEST_STARTED, DETECTION_TEST_UNKNOWN]
          description: The current state of the walk test.
      required:
        - '@type'
        - detectionState
    TamperState:
      type: object
      properties:
        '@type':
          type: string
          enum: [tamperState]
          description: The type of the Object.
        tamperProtectionEnabled:
          type: boolean
          description: Indicates if tamper protection is enabled.
        wasTampered:
          type: boolean
          description: Indicates if the device was tampered with.
        lastTamperTime:
          type: string
          format: date-time
          description: Timestamp of the last tamper event (ISO 8601).
      required:
        - '@type'
        - tamperProtectionEnabled
        - wasTampered
    PollControlState:
      type: object
      properties:
        '@type':
          type: string
          enum: [pollControlState]
          description: The type of the Object.
        longPollInterval:
          type: string
          enum: [SHORT, LONG, UNKNOWN]
          description: The polling interval. SHORT is ~1s, LONG is ~7s. UNKNOWN is for device issues or old apps.
      required:
        - '@type'
        - longPollInterval
    PirSensorConfigurationState:
      type: object
      properties:
        '@type':
          type: string
          enum: [pirSensorConfigurationState]
          description: The type of the Object.
        motionSensitivity:
          type: string
          enum: [LOW, MIDDLE, HIGH, UNKNOWN]
          description: The sensitivity of the PIR sensor. UNKNOWN is for device issues or old apps.
      required:
        - '@type'
        - motionSensitivity

  parameters:
    apiVersionHeaderParam:
      in: header
      name: api-version
      description: The version of the API.
      schema:
        type: string
        example: "1.0"
    deviceIdPathParam:
      name: deviceId
      in: path
      description: "A single fully qualified identifier of the Device."
      required: true
      schema:
        type: string
    propertyPathPathParam:
      name: propertyPath
      in: path
      description: The path to the Property.
      required: true
      schema:
        type: string