### Generated by Eclipse Vorto OpenAPI Generator from Model 'vorto.private.local.com.bosch.sh:Relay:1.0.0'
openapi: 3.0.0
info:
  title: Bosch Smart Home Local API for Relay
  description: |-
    This description focuses on the JSON-based, REST-like API for a Relay.
    It supports both Switch Mode and Impulse Mode configurations.

    By using this documentation, the developer accepts and agrees to be bound by our [Terms and Conditions](https://github.com/BoschSmartHome/bosch-shc-api-docs#terms-and-conditions).

    This documentation is subject to the [Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License](https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode).

    Please report any issues you encounter with this documentation in our [GitHub tracker](https://github.com/BoschSmartHome/bosch-shc-api-docs/issues).
  version: "1.0"
servers:
  - url: https://{shcIp}:8444/smarthome
    description: "Bosch Smart Home Controller URL"
    variables:
      shcIp:
        default: 192.168.0.10
tags:
  - name: Services
    description: Services of your Relay
  - name: States
    description: States of your Relay
  - name: Actions
    description: Actions of your Relay
paths:
  '/devices/{deviceId}/services/PowerSwitch':
    get:
      summary: Retrieve the PowerSwitch service of the Relay (Switch Mode).
      description: |-
        Retrieves the current status of the relay when configured in "Switch Mode".
      tags:
        - Services
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The PowerSwitch service was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerSwitchService'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/PowerSwitch/state':
    get:
      summary: Retrieve the state of the PowerSwitch service (Switch Mode).
      description: |-
        Retrieve the state of the PowerSwitch service identified by the
        `deviceId` path parameter.
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of PowerSwitch was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerSwitchServiceStates'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
    put:
      summary: Use PowerSwitch service to turn the relay on or off (Switch Mode).
      description: |-
        Turns the relay on or off when configured in "Switch Mode".
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/PowerSwitchServicePowerSwitchStatePayload'
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found. One of the defined path parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'

  '/devices/{deviceId}/services/ImpulseSwitch/operation/sendImpulse':
    post:
      summary: Send Impulse (Impulse Mode).
      description: |-
        Sends an impulse when the relay is configured in "Impulse Mode".
      tags:
        - Actions
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      requestBody:
        description: Empty body.
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found. One of the defined path parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{deviceId}/services/ImpulseSwitch/state':
    get:
      summary: Retrieve the current Impulse Mode configuration.
      description: |-
        Retrieves the current Impulse Mode configuration when the relay is configured in "Impulse Mode".
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      responses:
        '200':
          description: The state of ImpulseSwitch was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpulseSwitchServiceStates'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
    put:
      summary: Change the current Impulse Mode configuration.
      description: |-
        Changes the current Impulse Mode configuration when the relay is configured in "Impulse Mode".
      tags:
        - States
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - $ref: '#/components/parameters/deviceIdPathParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/ImpulseSwitchServiceImpulseStatePayload'
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found. One of the defined path parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '405':
          description: The method was not allowed.
        '422':
          description: Mapping of defined query parameter failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'

components:
  schemas:
    AdvancedError:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the Object.
          example: JsonRestExceptionResponseEntity
        errorCode:
          type: string
          description: The error code of the occurred Exception.
        statusCode:
          type: integer
          description: The HTTP status of the error.
    DeviceServiceData:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          oneOf:
            - $ref: '#/components/schemas/PowerSwitchServiceStates'
            - $ref: '#/components/schemas/ImpulseSwitchServiceStates'
          description: The state of the service.
        operations:
          type: array
          items:
            type: string
          description: List of operations supported by the service.
        path:
          type: string
          description: The path to the Property.
    PowerSwitchServiceStates:
      type: object
      description: PowerSwitchService states of Relay
      properties:
        '@type':
          type: string
          enum: [powerSwitchState]
          description: The type of the Object.
        switchState:
          $ref: '#/components/schemas/PowerSwitchState'
    PowerSwitchService:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          enum: [PowerSwitch]
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          $ref: '#/components/schemas/PowerSwitchServiceStates'
        path:
          type: string
          description: The path to the Property.
    PowerSwitchState:
      type: string
      enum: [ON,OFF]
    ImpulseSwitchServiceStates:
      type: object
      description: ImpulseSwitchService states of Relay
      properties:
        '@type':
          type: string
          enum: [ImpulseSwitchState]
          description: The type of the Object.
        impulseState:
          type: boolean
          description: Indicates if the impulse is currently active.
        impulseLength:
          type: number
          description: The length of the impulse in tenths of seconds (e.g., 10 = 1s).
        instantOfLastImpulse:
          type: string
          format: date-time
          description: Timestamp of the last impulse.
      required:
        - '@type'
        - impulseState
        - impulseLength
        - instantOfLastImpulse
    ImpulseSwitchService:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          enum: [ImpulseSwitch]
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          $ref: '#/components/schemas/ImpulseSwitchServiceStates'
        path:
          type: string
          description: The path to the Property.
  requestBodies:
    PowerSwitchServicePowerSwitchStatePayload:
      content:
        application/json:
          schema:
            type: object
            properties:
              '@type':
                type: string
                enum: [powerSwitchState]
                description: The type of the Object.
              switchState:
                $ref: '#/components/schemas/PowerSwitchState'
    ImpulseSwitchServiceImpulseStatePayload:
      content:
        application/json:
          schema:
            type: object
            properties:
              '@type':
                type: string
                enum: [ImpulseSwitchState]
                description: The type of the Object.
              impulseState:
                type: boolean
              impulseLength:
                type: number
  parameters:
    apiVersionHeaderParam:
      in: header
      name: api-version
      description: The version of the API.
      schema:
        type: string
        example: "1.0"
    deviceIdPathParam:
      name: deviceId
      in: path
      description: "A single fully qualified identifier of the Device."
      required: true
      schema:
        type: string
    propertyPathPathParam:
      name: propertyPath
      in: path
      description: The path to the Property.
      required: true
      schema:
        type: string