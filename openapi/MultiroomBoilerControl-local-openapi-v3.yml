### Generated by Eclipse Vorto OpenAPI Generator from Model 'vorto.private.local.com.bosch.sh:MultiroomBoilerControl:1.0.0'
openapi: 3.0.0
info:
  title: Bosch Smart Home Local API for Multiroom Boiler Control
  description: |-
    This description focuses on the JSON-based, REST-like API for Multiroom Boiler Control.
    
    By using this documentation, the developer accepts and agrees to be bound by our [Terms and Conditions](https://github.com/BoschSmartHome/bosch-shc-api-docs#terms-and-conditions).
    
    This documentation is subject to the [Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International Public License](https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode).
    
    Please report any issues you encounter with this documentation in our [GitHub tracker](https://github.com/BoschSmartHome/bosch-shc-api-docs/issues).
  version: "1.0"
servers:
  - url: https://{shcIp}:8444/smarthome
    description: "Bosch Smart Home Controller URL"
    variables:
      shcIp:
        default: 192.168.0.10
tags:
  - name: Boiler Control
    description: Operations related to multiroom boiler control
paths:
  '/devices/{boilerId}':
    get:
      summary: Retrieve information about a specific Boiler device.
      tags:
        - Boiler Control
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - name: boilerId
          in: path
          description: "A single fully qualified identifier of the Boiler Device."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A successful response containing the boiler device information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoilerDevice'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/devices/{boilerId}/services':
    get:
      summary: Get boiler device services.
      description: Returns a list of services available for the specified boiler device.
      tags:
        - Boiler Control
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - name: boilerId
          in: path
          description: "A single fully qualified identifier of the Boiler Device."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The BoilerControl services were successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceServiceData'
        '404':
          description: |-
            The entity could not be found. One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
  '/relay/boiler/rooms':
    get:
      summary: Get all boiler capable rooms.
      description: Returns all rooms that are capable of boiler control (i.e., rooms with a Room Climate Control).
      tags:
        - Boiler Control
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
      responses:
        '200':
          description: A list of boiler-capable room IDs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: "hz_1"
        '404':
          description: The entity could not be found.
  '/relay/boiler/{boilerId}/rooms':
    get:
      summary: Get RCC rooms linked to a specific boiler.
      description: Returns all Room Climate Control rooms and whether they are linked to a particular boiler.
      tags:
        - Boiler Control
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - name: boilerId
          in: path
          description: "A single fully qualified identifier of the Boiler Device."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A map of room IDs to their linked status.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
                example:
                  hz_2: true
                  hz_1: false
        '404':
          description: The entity could not be found.
    put:
      summary: Set which rooms are linked to the boiler.
      description: Sets the list of rooms that are linked to the specified boiler.
      tags:
        - Boiler Control
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - name: boilerId
          in: path
          description: "A single fully qualified identifier of the Boiler Device."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              example: ["hz_1", "hz_2"]
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found.
  '/relay/boiler/{boilerId}/room':
    put:
      summary: Add a single room to the boiler control.
      description: Adds a single additional room to the boiler control for the specified boiler.
      tags:
        - Boiler Control
      parameters:
        - $ref: '#/components/parameters/apiVersionHeaderParam'
        - name: boilerId
          in: path
          description: "A single fully qualified identifier of the Boiler Device."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: "hz_2"
      responses:
        '204':
          description: Accepted request.
        '400':
          description: One of the defined query parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedError'
        '404':
          description: The entity could not be found.

components:
  schemas:
    AdvancedError:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the Object.
          example: JsonRestExceptionResponseEntity
        errorCode:
          type: string
          description: The error code of the occurred Exception.
        statusCode:
          type: integer
          description: The HTTP status of the error.
    BoilerDevice:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the Object.
          example: device
        rootDeviceId:
          type: string
          description: "A single fully qualified identifier of the Smart Home Controller."
        id:
          type: string
          description: "A single fully qualified identifier of the Boiler Device."
        deviceServiceIds:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
            description: "A single fully qualified identifier a Device's Service."
          example: ["BoilerHeating"]
        manufacturer:
          type: string
          description: The manufacturer of the Device.
        deviceModel:
          type: string
          description: The model of the Device.
          example: "BOILER"
        serial:
          type: string
          description: The serial of the Device.
        name:
          type: string
          description: The name of the Device.
        status:
          type: string
          description: Indicates if the Device is available.
          enum: [AVAILABLE,UNAVAILABLE,COMMUNICATION_ERROR,UNDEFINED]
        parentDeviceId:
          type: string
          description: The ID of the parent relay device, if applicable.
        childDeviceIds:
          type: array
          items:
            type: string
        supportedProfiles:
          type: array
          items:
            type: string
        installationTimestamp:
          type: integer
          format: int64
    DeviceServiceData:
      type: object
      properties:
        '@type':
          type: string
          enum: [DeviceServiceData]
          description: The type of the Object.
        id:
          type: string
          description: "A single fully qualified identifier of the Service of a Device."
        deviceId:
          type: string
          description: "A single fully qualified identifier of the Device."
        state:
          $ref: '#/components/schemas/BoilerHeatingState'
        path:
          type: string
          description: The path to the Property.
    BoilerHeatingState:
      type: object
      properties:
        '@type':
          type: string
          enum: [BoilerHeatingState]
          description: The type of the Object.
        enabled:
          type: boolean
          description: Indicates if boiler heating is enabled.
        heatDemand:
          type: string
          enum: [HEAT_DEMAND, NO_HEAT_DEMAND]
          description: Overall heat demand state.
        roomsHeatState:
          type: object
          description: Map of room IDs to their individual heat demand states.
          additionalProperties:
            type: string
            enum: [HEAT_DEMAND, NO_HEAT_DEMAND]
      required:
        - '@type'
        - enabled
        - heatDemand
        - roomsHeatState
  parameters:
    apiVersionHeaderParam:
      in: header
      name: api-version
      description: The version of the API.
      schema:
        type: string
        example: "1.0"